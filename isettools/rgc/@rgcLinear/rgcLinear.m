classdef rgcLinear < rgcMosaic
% rgcMosaic using a linear computational model
%
% The linear model is detailed in Chichilnisky & Kalmar, J. Neurosci
% (2002).
% 
% The computational model implemented here relies on code by
% <http://pillowlab.princeton.edu/code_GLM.html Pillow>, which is
% distributed under the GNU General Public License.
% 
% rgcLinear is a subclass of @rgcMosaic. It is called when creating a new
% rgcMosaic from an inner retina object.  Typically we get here from
% rgcMosaicCreate with the call:
% 
%   ir.mosaicCreate('model','Linear','type','your type goes here')
% % 
% The center and surround spatial receptive fields and the temporal impulse
% responses are initialized in @rgcMosaic/initialize. The rgcLinear
% class is only initialized by the parent class rgcMosaic; it does not have
% its own initialize function. 
% 
% See also: rgcMosaic.m, rgcLNP.m, rgcGLM.m
%
% Example:
% 
%   ir.mosaicCreate('model','Linear','type','on midget'); 
%
% 9/2015 JRG (c) isetbio team
% 7/2016 JRG updated
% 
%% Properties
% Public, read-only properties.
    properties (SetAccess = private, GetAccess = public)
    end
           
    % Protected properties.
    properties (SetAccess = private, GetAccess = public)
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        % rgcLinear is a subclass of rgcMosaic.
        % The properties generated by the rgcMosaic superclass are:
        
        % model;
        % cellType;           % Possible types are ...
        % rfDiameter;         % receptive field center diameter
        % cellLocation;
        % sRFcenter;          % spatial RF of the center on the receptor grid
        % sRFsurround;        % spatial RF of the surround
        % tCenter;            % temporal impulse response of the center
        % tSurround;          %    and of the surround (1 ms timing by default)
        % tonicDrive;         % DC term for linear response
        % rfDiaMagnitude;     % for making movies of response
        % responseLinear;     % Store the linear response after convolution
        % responseSpikes;
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    end
    
    % Private properties. Only methods of the parent class can set these
    properties(Access = private)
    end
    
    % Public methods
    methods
        
        % Constructor
        function obj = rgcLinear(rgc, mosaicInd)
            % Initialize the parent class
            obj = obj@rgcMosaic(rgc, mosaicInd);
            
        end
        
        % set function, see for details
        function obj = set(obj, varargin)
            mosaicSet(obj, varargin{:});
        end
        
        % get function, see for details
        function val = get(obj, varargin)
           val = mosaicGet(obj, varargin{:});
        end
            
        initialize(obj, varargin);
    end
%% Methods
    % Methods that must only be implemented (Abstract in parent class).
    methods (Access=public)

    end    
    
    % Methods may be called by the subclasses, but are otherwise private 
    methods (Access = protected)
    end
    
    % Methods that are totally private (subclasses cannot call these)
    methods (Access = private)
    end
    
end
