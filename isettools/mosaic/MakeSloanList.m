function [list] = MakeSloanList(nrecreq,ndim,ratio,jittersd)% [list] = MakeSloanList(nrecreq,ndim,ratio,jitter)%% Make a mosaic according to the algorithm in Curcio & Sloan (1992).% They cite Sloan (1989) as the source.  I had to add some scaling% stuff to make it work.%   nrecreq is the desired number of receptors, = n^2 for some n.%   ndim is the linear image dimension.%   ratio is the diagonal compression ratio.%   jitter is the lattice jitter sd%   list is a list of the row,col positions of the receptors.%% 7/10/94		dhb		Changed name from MakeSloanMosaic.% 7/16/94		dhb		Fixed things broken by name changes.% How many extra to generatefactor = 4;% Generate rectangluar mosaic on a bigger gridonedreq = floor(sqrt(nrecreq));nrecreq = onedreq^2;list = MakeRegularList(nrecreq*factor^2,ndim*factor);% Rotate it 45 degrees around originlist = ShiftList(list,ndim*factor/2,ndim*factor/2);list = RotateList(list,pi/4);% Compress itC(1,1) = 1/ratio;C(1,2) = 0;C(2,1) = 0;C(2,2) = ratio;list = list*C;% Rotate it backlist = RotateList(list,-pi/4);list = ShiftList(list,-ndim*factor/2,-ndim*factor/2);% Jitter% Now jitter whole list in scaled coordinates.list = JitterList(list,jittersd,ndim*factor);% Check for duplicate locationslist = RemoveListDups(list,ndim*factor);% Pick out receptors that are within central ndim rectangle% and return coordinates relative the the origin.list = ShiftList(list,ndim*factor/2,ndim*factor/2);list = TruncateList(list,1,ndim);