function [patchDogParams, responseAmplitude, spatialFrequenciesCPDHR, responseAmplitudeHR, responseTimeAxisHR, fittedResponsesHR] = ...
    computeAndFitDOGmodelToSpatialFrequencyTuningCurves(...
    responseTimeAxis, integratedResponsesMean, integratedResponsesStDev, ...
    maxSpikeRateModulation, stimSpatialParams, stimTemporalParams,  spatialFrequenciesCPD, visualizeIndividualFits, ...
    LMScontrast,  opticsPostFix, PolansSubjectID, exportFig, figExportsDir)

    % Compute response modulations at each spatial frequency
    for sfIndex = 1:numel(spatialFrequenciesCPD)
        switch (stimSpatialParams.type)
            case 'driftingGrating'
                visualizeIndividualSinusoidalFits = ~true;
                exportSinusoidalFig = ~true;
                % Compute modulation of the response at the fundamental temporal frequency
                [responseAmplitude(:, sfIndex), responseAmplitudeSE(:, sfIndex), responsePhase(:, sfIndex), ...
                    responseTimeAxisHR, fittedResponsesHR(sfIndex,:,:)] = fitSinusoidalModulationToResponseTimeCourse(...
                    squeeze(integratedResponsesMean(sfIndex,:,:)), ...
                    squeeze(integratedResponsesStDev(sfIndex,:,:)), ...
                    responseTimeAxis, ...
                    stimTemporalParams.temporalFrequencyHz, ...
                    spatialFrequenciesCPD(sfIndex), maxSpikeRateModulation, ...
                     visualizeIndividualSinusoidalFits, [], LMScontrast,  opticsPostFix, PolansSubjectID, exportSinusoidalFig, figExportsDir);
            otherwise
                error('Unknown stimulus type: ''%''.', stimulusSpatialParams.type)
        end
        
    end % sfIndex
    
    % Fit the DoG model to the SF tuning curves
    initialParams = [];
    [~,~,~, meanParams] = ...
        fitDoGmodelToSpatialFrequencyCurve(spatialFrequenciesCPD, responseAmplitude, responseAmplitudeSE, initialParams, ...
        maxSpikeRateModulation, false, ...
        LMScontrast, opticsPostFix, PolansSubjectID, false, '');
    
    % Second fit
    initialParams = meanParams;
    [patchDogParams,spatialFrequenciesCPDHR, responseAmplitudeHR] = ...
        fitDoGmodelToSpatialFrequencyCurve(spatialFrequenciesCPD, responseAmplitude, responseAmplitudeSE, initialParams, ...
        maxSpikeRateModulation, visualizeIndividualFits, ...
        LMScontrast, opticsPostFix, PolansSubjectID, exportFig, figExportsDir);
end

